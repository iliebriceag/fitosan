{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      isCartView: false,\n      pageTitle: \"Our Books\"\n    };\n  },\n  methods: {\n    // responsible for showing the cart page\n    // when View cart button is clicked\n    displayCartView() {\n      this.isCartView = true;\n      this.pageTitle = \"Your Cart\";\n    },\n    // responsible for showing products page\n    // when logo is clicked\n    goToHomePage() {\n      this.isCartView = false;\n      this.pageTitle = \"Our Books\";\n    },\n    getCartItems(prod) {\n      if (this.cartItems.length > 0) {\n        for (let i = 0; i < this.cartItems.length; i++) {\n          if (this.cartItems[i].item.id === prod.id) {\n            this.cartItems[i].quantity++;\n          } else {\n            this.cartItems.push({\n              item: prod,\n              quantity: 1\n            });\n          }\n        }\n      }\n    },\n    // if the product is already in the cart,\n    // increase its quantity by 1\n    // else create a new object with the\n    // selected product info and push it\n    // into the cartItems array.\n    // Decrease stock quantity when item is\n    // added to the cart\n    addProdToCart(prod) {\n      for (let i = 0; i < this.cartItems.length; i++) {\n        if (this.cartItems[i].item.id === prod.id) {\n          this.cartItems[i].quantity++;\n          return;\n        }\n      }\n      this.cartItems.push({\n        item: prod,\n        quantity: 1\n      });\n\n      // decrease stock when product\n      // is added to the cart\n      //console.log(this.cartItems);\n      prod.inStock--;\n    },\n    // + button functionality in the \n    // cart: quantity goes up by 1,\n    // in stock goes down by 1 \n    increaseQuantity(prod) {\n      prod.quantity++;\n      prod.item.inStock--;\n    },\n    // when the quantity reaches 0, the item\n    // is removed from the cart\n    removeProdFromCart(prod) {\n      const prodIndex = this.cartItems.indexOf(prod);\n      this.cartItems.splice(prodIndex, 1);\n    },\n    // - button functionality in the cart: \n    // quantity is decreased by 1,\n    // in stock is increased by 1,\n    // if quantity = 0, product is removed\n    // from the cart\n    decreaseQuantity(prod) {\n      prod.quantity--;\n      prod.item.inStock++;\n      if (prod.quantity <= 0) {\n        this.removeProdFromCart(prod);\n      }\n    },\n    checkout() {\n      // remove all products from the cart\n      this.cartItems = [];\n    }\n  },\n  computed: {\n    // this function keeps an eye on the quantity in \n    // the cart, which may vary as users add or remove\n    // products and calculates the total each time\n    calculateTotal() {\n      let total = 0;\n      for (let i = 0; i < this.cartItems.length; i++) {\n        total += this.cartItems[i].item.price * this.cartItems[i].quantity;\n      }\n      return total;\n    }\n  }\n};","map":{"version":3,"names":["data","cartItems","isCartView","pageTitle","methods","displayCartView","goToHomePage","getCartItems","prod","length","i","item","id","quantity","push","addProdToCart","inStock","increaseQuantity","removeProdFromCart","prodIndex","indexOf","splice","decreaseQuantity","checkout","computed","calculateTotal","total","price"],"sources":["D:\\My Projects\\sere-prj\\src\\components\\Cart.vue"],"sourcesContent":["<template>\r\n    <div class=\"nr-product\">\r\n        <span class=\"status d-flex justify-content-center align-items-center\">7</span>\r\n        <a class=\"cart\" href=\"#\"><i class=\"bi bi-cart2 d-flex justify-content-center align-items-center\"></i><span\r\n                class=\"none\">Coș cumpărături</span></a>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.nr-product {\r\n    position: relative;\r\n}\r\n\r\n.status {\r\n    position: fixed;\r\n    bottom: 50px;\r\n    left: 240px;\r\n    z-index: 1;\r\n    padding: 5px;\r\n    width: 30px;\r\n    border-radius: 40px;\r\n    background-color: rgb(228, 7, 7);\r\n    color: white;\r\n    font-size: .8rem;\r\n}\r\n\r\n.cart {\r\n    position: fixed;\r\n    left: 125px;\r\n    color: #fff;\r\n    padding: 15px;\r\n    box-shadow: 1px 1px 5px #222;\r\n    -o-box-shadow: 1px 1px 5px #222;\r\n    -webkit-box-shadow: 1px 1px 5px #222;\r\n    -moz-box-shadow: 1px 1px 5px #222;\r\n    -ms-box-shadow: 1px 1px 5px #222;\r\n    font-weight: 300;\r\n    color: #DDD;\r\n    cursor: pointer;\r\n    border-top-left-radius: 30px;\r\n    border-top-right-radius: 30px;\r\n    bottom: 0;\r\n    background-color: #008080;\r\n    border: none;\r\n    text-decoration: none;\r\n}\r\n\r\n@media only screen and (max-width : 361px) {\r\n    .none {\r\n        display: none;\r\n    }\r\n\r\n    .cart {\r\n        height: 70px;\r\n    }\r\n\r\n    .status {\r\n        left: 155px;\r\n    }\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n     \r\n\r\n            cartItems: [],\r\n\r\n            isCartView: false,\r\n            pageTitle: \"Our Books\"\r\n        }\r\n    },\r\n    methods: {\r\n        // responsible for showing the cart page\r\n        // when View cart button is clicked\r\n        displayCartView() {\r\n            this.isCartView = true;\r\n            this.pageTitle = \"Your Cart\";\r\n        },\r\n\r\n        // responsible for showing products page\r\n        // when logo is clicked\r\n        goToHomePage() {\r\n            this.isCartView = false;\r\n            this.pageTitle = \"Our Books\";\r\n        },\r\n\r\n        getCartItems(prod) {\r\n            if (this.cartItems.length > 0) {\r\n                for (let i = 0; i < this.cartItems.length; i++) {\r\n                    if (this.cartItems[i].item.id === prod.id) {\r\n                        this.cartItems[i].quantity++;\r\n                    } else {\r\n                        this.cartItems.push({\r\n                            item: prod,\r\n                            quantity: 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // if the product is already in the cart,\r\n        // increase its quantity by 1\r\n        // else create a new object with the\r\n        // selected product info and push it\r\n        // into the cartItems array.\r\n        // Decrease stock quantity when item is\r\n        // added to the cart\r\n        addProdToCart(prod) {\r\n            for (let i = 0; i < this.cartItems.length; i++) {\r\n                if (this.cartItems[i].item.id === prod.id) {\r\n                    this.cartItems[i].quantity++;\r\n                    return;\r\n                }\r\n            }\r\n            this.cartItems.push({\r\n                item: prod,\r\n                quantity: 1\r\n            });\r\n\r\n            // decrease stock when product\r\n            // is added to the cart\r\n            //console.log(this.cartItems);\r\n            prod.inStock--;\r\n        },\r\n\r\n        // + button functionality in the \r\n        // cart: quantity goes up by 1,\r\n        // in stock goes down by 1 \r\n        increaseQuantity(prod) {\r\n            prod.quantity++;\r\n            prod.item.inStock--;\r\n        },\r\n\r\n        // when the quantity reaches 0, the item\r\n        // is removed from the cart\r\n        removeProdFromCart(prod) {\r\n            const prodIndex = this.cartItems.indexOf(prod);\r\n            this.cartItems.splice(prodIndex, 1);\r\n        },\r\n\r\n        // - button functionality in the cart: \r\n        // quantity is decreased by 1,\r\n        // in stock is increased by 1,\r\n        // if quantity = 0, product is removed\r\n        // from the cart\r\n        decreaseQuantity(prod) {\r\n            prod.quantity--;\r\n            prod.item.inStock++;\r\n            if (prod.quantity <= 0) {\r\n                this.removeProdFromCart(prod);\r\n            }\r\n        },\r\n\r\n        checkout() {\r\n            // remove all products from the cart\r\n            this.cartItems = [];\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        // this function keeps an eye on the quantity in \r\n        // the cart, which may vary as users add or remove\r\n        // products and calculates the total each time\r\n        calculateTotal() {\r\n            let total = 0;\r\n            for (let i = 0; i < this.cartItems.length; i++) {\r\n                total += this.cartItems[i].item.price * this.cartItems[i].quantity;\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}