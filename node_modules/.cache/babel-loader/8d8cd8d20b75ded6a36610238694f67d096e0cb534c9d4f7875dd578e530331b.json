{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(_toDisplayString(_ctx.$route.params.id) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.product.name), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createTextVNode","_toDisplayString","_ctx","$route","params","id","_createElementVNode","product","name"],"sources":["D:\\My Projects\\sere-prj\\src\\components\\ProductPage.vue"],"sourcesContent":["<template>\r\n<div>\r\n{{ $route.params.id }}\r\n\r\n<div>\r\n    {{ product.name }}\r\n</div>\r\n\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useShoppingStore } from '../stores'\r\n// //get props\r\nconst props = defineProps({\r\n    product: {\r\n        type: Object,\r\n        required: true\r\n    }\r\n});\r\n//get store\r\nconst data = useShoppingStore();\r\n\r\nimport { ref, watch, watchEffect } from 'vue';\r\n  import { onBeforeRouteUpdate, useRoute, useRouter } from 'vue-router';\r\n  const route = useRoute();\r\n  const router = useRouter();\r\n\r\n  const props = defineProps({\r\n    id: String\r\n  });\r\n  console.log(props);\r\n  console.log(route.params);\r\n\r\n  const post = ref(null);\r\n\r\n  const getPost = async (id) => {\r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n    post.value = await response.json();\r\n  };\r\n\r\n  getPost(props.id);\r\n  onBeforeRouteUpdate((to, from) => {\r\n    getPost(to.params.id);\r\n  });\r\n\r\n  const onBackClick = () => {\r\n    router.go(-1);\r\n  };\r\n</script>\r\n\r\n"],"mappings":";;uBACAA,mBAAA,CAOM,cARNC,gBAAA,CAAAC,gBAAA,CAEGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,EAAE,IAAG,GAEtB,iBAAAC,mBAAA,CAEM,aAAAL,gBAAA,CADCC,IAAA,CAAAK,OAAO,CAACC,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}